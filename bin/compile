#!/bin/bash
set -euo pipefail

build_dir=$1
cache_dir=$2
env_dir=${3:-""}

# Just use ~
build_dir=~

# Echo directories
echo "build dir: $build_dir"
echo "cache dir: $cache_dir"
echo "env_dir: $env_dir"

if [ -f "${env_dir}/FREETDS_SOURCE_URL" ]; then
  source_url=$(cat "${env_dir}/FREETDS_SOURCE_URL")
else
  source_url="ftp://ftp.freetds.org/pub/freetds/stable/freetds-1.3.13.tar.gz"
fi

echo "-----> FreeTDS building in ${build_dir}"

echo '-----> Fetching & Extracting FreeTDS'
mkdir -p "${cache_dir}"
curl "${source_url}" --silent -o - | tar -xz -C "${cache_dir}" -f - --strip-components=1
ls -al $cache_dir

echo '-----> Configurating FreeTDS'
mkdir -p "${build_dir}/vendor/freetds"
pushd "${cache_dir}"
#./configure "--prefix=${build_dir}/vendor/freetds" --with-libiconv-prefix=DIR --with-openssl=DIR --with-tdsver=7.3
./configure "--prefix=${build_dir}/vendor/freetds" --prefix="${build_dir}/vendor" --with-tdsver=7.3

echo '-----> Building FreeTDS'
make

echo "-----> Installing FreeTDS into ${build_dir}/vendor/freetds"
mkdir -p "${build_dir}/vendor/freetds"
make install

#echo '-----> Copying FreeTDS into /app/vendor/freetds'
#mkdir -p "/app/vendor/freetds"
#cp -r "${build_dir}/vendor/freetds" /app/vendor/freetds

echo '-----> Writing FreeTDS configuration for subsequent buildpack'
mkdir -p "/app/.profile.d"
cat <<-EOF >> "/app/.profile.d/freetds.sh"
export PATH=$PATH:$HOME/vendor/bin
export PATH=$PATH:app/vendor/bin
echo "-----> made it here to the bash script"
echo "       ${PATH}"
EOF
echo "-----> test PATH"
ls /app/.profile.d
cat /app/.profile.d/freetds.sh
bash /app/.profile.d/freetds.sh
echo $PATH
echo "-----> Done with FreeTDS config!"
